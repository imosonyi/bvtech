version: 2
jobs:
  build:
    docker:
      - image: mosonyi15/maven-node:1.0

    working_directory: ~/repo

    environment:
      # JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout


      # Build Jakarta EE application
      - restore_cache:
          keys:
            - m2-jakartaee-{{ checksum "bvtech-jakartaee/pom.xml" }}
            - m2-jakartaee

      - run: cd bvtech-jakartaee && mvn dependency:go-offline && cd ..

      - save_cache:
          key: m2-jakartaee-{{ checksum "bvtech-jakartaee/pom.xml" }}
          paths:
            - ~/.m2

      - run: cd bvtech-jakartaee && mvn clean verify && cd ..

      - store_artifacts:
          path: bvtech-jakartaee/target/bvtech-jakartaee.war

      - store_test_results:
          path: bvtech-jakartaee/target/site/jacoco


      # Build Spring Boot analyzer microservice
      - restore_cache:
          keys:
            - m2-springboot-analyzer-{{ checksum "bvtech-springboot/bvtech-analyzer/pom.xml" }}
            - m2-springboot-analyzer

      - run: cd bvtech-springboot/bvtech-analyzer && mvn dependency:go-offline && cd ../..

      - save_cache:
          key: m2-springboot-analyzer-{{ checksum "bvtech-springboot/bvtech-analyzer/pom.xml" }}
          paths:
            - ~/.m2

      - run: cd bvtech-springboot/bvtech-analyzer && mvn clean verify && cd ../..

      - store_artifacts:
          path: bvtech-springboot/bvtech-analyzer/target/bvtech-springboot-analyzer.jar

      - store_test_results:
          path: bvtech-springboot/bvtech-analyzer/target/site/jacoco


      # Build Spring Boot database microservice
      - restore_cache:
          keys:
            - m2-springboot-db-{{ checksum "bvtech-springboot/bvtech-db/pom.xml" }}
            - m2-springboot-db

      - run: cd bvtech-springboot/bvtech-db && mvn dependency:go-offline && cd ../..

      - save_cache:
          key: m2-springboot-db-{{ checksum "bvtech-springboot/bvtech-db/pom.xml" }}
          paths:
            - ~/.m2

      - run: cd bvtech-springboot/bvtech-db && mvn clean verify && cd ../..

      - store_artifacts:
          path: bvtech-springboot/bvtech-db/target/bvtech-springboot-db.jar

      - store_test_results:
          path: bvtech-springboot/bvtech-db/target/site/jacoco


      # Build Spring Boot gateway microservice
      - restore_cache:
          keys:
            - m2-springboot-gateway-{{ checksum "bvtech-springboot/bvtech-gateway/pom.xml" }}
            - m2-springboot-gateway

      - run: cd bvtech-springboot/bvtech-gateway && mvn dependency:go-offline && cd ../..

      - save_cache:
          key: m2-springboot-gateway-{{ checksum "bvtech-springboot/bvtech-gateway/pom.xml" }}
          paths:
            - ~/.m2

      - run: cd bvtech-springboot/bvtech-gateway && mvn clean verify && cd ../..

      - store_artifacts:
          path: bvtech-springboot/bvtech-gateway/target/bvtech-springboot-gateway.jar


      # Build Angular application
      - restore_cache:
          keys:
            - npm-angular-{{ checksum "bvtech-angular/package-lock.json" }}
            - npm-angular

      - run: cd bvtech-angular && npm install && cd ..

      - save_cache:
          key: npm-angular-{{ checksum "bvtech-angular/package-lock.json" }}
          paths:
            - bvtech-angular/node_modules

      - run: cd bvtech-angular && npm run build && cd ..

      - store_artifacts:
          path: bvtech-angular/dist/bvtech-angular
